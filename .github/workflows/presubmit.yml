name: AndroidX Presubmits
on:
  push:
  pull_request:

env:
  # Allow precise monitoring of the save/restore of Gradle User Home by `gradle-build-action`
  # See https://github.com/marketplace/actions/gradle-build-action?version=v2.1.1#cache-debugging-and-analysis
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
  GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX: "2022.07.23"
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      gradlew_flags: ${{ steps.global-constants.outputs.gradlew_flags }}
    steps:
      - name: "Setup global constants"
        id: global-constants
        # The configuration-cache cannot be used due to state excluded when caching Gradle User Home
        run: |
          set -x
          GRADLEW_FLAGS="-Dorg.gradle.internal.http.connectionTimeout=60000 \
            -Dorg.gradle.internal.http.socketTimeout=60000                  \
            -Dorg.gradle.internal.repository.max.retries=20                 \
            -Dorg.gradle.internal.repository.initial.backoff=500            \
            --no-configuration-cache                                        \
            --stacktrace"
          echo "::set-output name=gradlew_flags::$GRADLEW_FLAGS"
      - name: Publish build scans link
        # No scans are produced for PRs from forked repos, so omit this notice for forked PRs.
        if: ${{ !(github.event.pull_request && github.event.pull_request.head.repo.fork) }}
        run: echo "::notice title=All build scans for workflow::https://ge.androidx.dev/scans?search.names=CI%20run&search.values=$GITHUB_RUN_ID"

  build-modules:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # If you would like to remove some projects temporarily, use .github/ci-control/ci-config.json instead.
        # Keep these in alphabetical order.
        project: ["native-cache-repro-project"]
        include:
          - project: "compose-runtime"
            project-root: "compose/runtime"
          - project: "native-cache-repro-project"
            custom-os: "macos-latest"
    runs-on: ${{ matrix.custom-os || matrix.os }}
    needs: [setup]
    env:
      artifact-id: ${{matrix.project}}
      project-root: ${{matrix.project-root || matrix.project}}
      GRADLE_BUILD_CACHE_PASSWORD: ${{ secrets.GRADLE_BUILD_CACHE_PASSWORD }}
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
    steps:
      - name: "Checkout androidx repo"
        uses: actions/checkout@v2
      - name: "Check if the project should be built"
        id: check-ci-config
        env:
          BRANCH_REF: ${{ github.head_ref || github.ref }}
        run: |
          set -x
          RESULT=`.github/ci-control/should_run_project.py --project ${{ matrix.project }} --branch "$BRANCH_REF"`
          echo "::set-output name=enabled::$RESULT"
      - name: "Run build"
        uses: ./.github/actions/build-single-project
        if: ${{ steps.check-ci-config.outputs.enabled == 'true' }}
        with:
          project: ${{ matrix.project }}
          project-root: ${{matrix.project-root || matrix.project }}
          gradle-cache-password: ${{ secrets.GRADLE_BUILD_CACHE_PASSWORD }}
          gradle-enterprise-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          gradle-flags: ${{ needs.setup.outputs.gradlew_flags }}
      # Upload artifacts task should be in the build-single-project
      # action but they have a tendency to fail and continue-on-error
      # is not supported there yet.
      # https://github.com/actions/runner/issues/1457
      - name: "Upload build artifacts"
        continue-on-error: true
        if: ${{ steps.check-ci-config.outputs.enabled == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: artifacts_${{ matrix.project }}
          path: ~/dist
      - name: "Upload daemon logs"
        continue-on-error: true
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: gradle-daemon-logs_${{ matrix.project }}
          path: ~/.gradle/daemon
